/**
 * @fileoverview OPENSEARCH alarm configuration definitions.
 *
 * This file contains the default configurations for all supported OPENSEARCH CloudWatch alarms managed by AutoAlarm.
 *
 * @requires
 * - Approval from Owners Team lead and consultation before adding new alarms
 * - Anomaly Alarms can only use the following comparison operators: GreaterThanUpperThreshold, LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold
 *
 * @Owners HARMONY-DEVOPS
 */

import {MetricAlarmConfig} from '../types/index.mjs';
import {ComparisonOperator} from '@aws-sdk/client-cloudwatch';
import {TreatMissingData} from 'aws-cdk-lib/aws-cloudwatch';

/**
 * _OPENSEARCH alarm configuration definitions.
 * Implements the {@link MetricAlarmConfig} interface.
 * Used to map a tag key to a CloudWatch metric name and namespace to default alarm configurations {@link MetricAlarmOptions}.
 */
export const OPENSEARCH_CONFIGS: MetricAlarmConfig[] = [
  {
    tagKey: '4xx-errors',
    metricName: '4xx',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: false,
    defaults: {
      warningThreshold: 100,
      criticalThreshold: 300,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Sum',
      dataPointsToAlarm: 1,
      comparisonOperator: ComparisonOperator.GreaterThanThreshold,
      missingDataTreatment: TreatMissingData.IGNORE,
    },
  },
  {
    tagKey: '4xx-errors-anomaly',
    metricName: '4xx',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: null,
      criticalThreshold: null,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Average',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: '5xx-errors',
    metricName: '5xx',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 10, // TODO This threshold make no sense to me
      criticalThreshold: 50, // TODO This threshold make no sense to me
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Sum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: '5xx-errors-anomaly',
    metricName: '5xx',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: null,
      criticalThreshold: null,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Average',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'cpu',
    metricName: 'CPUUtilization',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 98,
      criticalThreshold: 98,
      period: 300,
      evaluationPeriods: 2,
      statistic: 'Maximum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'cpu-anomaly',
    metricName: 'CPUUtilization',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: 2,
      criticalThreshold: 2,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Average',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'iops-throttle',
    metricName: 'IopsThrottle',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 5,
      criticalThreshold: 10,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Sum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'iops-throttle-anomaly',
    metricName: 'IopsThrottle',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: null,
      criticalThreshold: null,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Average',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'jvm-memory',
    metricName: 'JVMMemoryPressure',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 90,
      criticalThreshold: 95,
      period: 300,
      evaluationPeriods: 2,
      statistic: 'Maximum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'jvm-memory-anomaly',
    metricName: 'JVMMemoryPressure',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: null,
      criticalThreshold: null,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Average',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'read-latency',
    metricName: 'ReadLatency',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 0.03,
      criticalThreshold: 0.08,
      period: 60,
      evaluationPeriods: 2,
      statistic: 'Maximum',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'read-latency-anomaly',
    metricName: 'ReadLatency',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: 2,
      criticalThreshold: 6,
      period: 300,
      evaluationPeriods: 2,
      statistic: 'Average',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  // TODO: temp until we reevaluate. Might need thresholds to be .5/1
  {
    tagKey: 'search-latency',
    metricName: 'SearchLatency',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 2,
      criticalThreshold: 4,
      period: 300,
      evaluationPeriods: 4,
      statistic: 'Average',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'search-latency-anomaly',
    metricName: 'SearchLatency',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: true,
    defaults: {
      warningThreshold: null,
      criticalThreshold: null,
      period: 300,
      evaluationPeriods: 2,
      statistic: 'Average',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'snapshot-failure',
    metricName: 'AutomatedSnapshotFailure',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: null,
      criticalThreshold: 1,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Sum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanOrEqualToThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'storage',
    metricName: 'FreeStorageSpace',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      //Threshold are in MegaBytes
      warningThreshold: 10000,
      criticalThreshold: 5000,
      period: 300,
      evaluationPeriods: 2,
      statistic: 'Sum',
      dataPointsToAlarm: 2,
      comparisonOperator: 'LessThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'storage-anomaly',
    metricName: 'FreeStorageSpace',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: true,
    defaults: {
      warningThreshold: 2,
      criticalThreshold: 3,
      period: 300,
      evaluationPeriods: 2,
      statistic: 'Sum',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'throughput-throttle',
    metricName: 'ThroughputThrottle',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: false,
    defaults: {
      warningThreshold: 40,
      criticalThreshold: 60,
      period: 60,
      evaluationPeriods: 2,
      statistic: 'Sum',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'throughput-throttle-anomaly',
    metricName: 'ThroughputThrottle',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: 3,
      criticalThreshold: 5,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Average',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'write-latency',
    metricName: 'WriteLatency',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: 84,
      criticalThreshold: 100,
      period: 60,
      evaluationPeriods: 2,
      statistic: 'Maximum',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'write-latency-anomaly',
    metricName: 'WriteLatency',
    metricNamespace: 'AWS/ES',
    defaultCreate: false,
    anomaly: true,
    defaults: {
      warningThreshold: null,
      criticalThreshold: null,
      period: 60,
      evaluationPeriods: 2,
      statistic: 'Average',
      dataPointsToAlarm: 2,
      comparisonOperator: 'GreaterThanUpperThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'yellow-cluster',
    metricName: 'ClusterStatus.yellow',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: null,
      criticalThreshold: 1,
      period: 300,
      evaluationPeriods: 1,
      statistic: 'Maximum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  {
    tagKey: 'red-cluster',
    metricName: 'ClusterStatus.red',
    metricNamespace: 'AWS/ES',
    defaultCreate: true,
    anomaly: false,
    defaults: {
      warningThreshold: null,
      criticalThreshold: 1,
      period: 60,
      evaluationPeriods: 1,
      statistic: 'Maximum',
      dataPointsToAlarm: 1,
      comparisonOperator: 'GreaterThanThreshold',
      missingDataTreatment: 'ignore',
    },
  },
  // add more as needed
] as const;
